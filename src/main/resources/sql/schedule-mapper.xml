<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schedule">


	
	
	<insert id="addSchedule" parameterType="com.khacademy.khoffice.schedule.models.ScheduleDTO">
		insert into schedule(SCHEDULE_NO,SUBJECT,START_DATE,END_DATE,MEMBER_NO) 
		
		values(schedule_seq.nextval,#{subject},#{start_date},#{end_date},#{member_no})
	</insert>
	
	
	
	<select id="scheduleList" parameterType="map" resultType="com.khacademy.khoffice.schedule.models.ScheduleDTO">
	
		select * from schedule where member_no = #{member_no}
		
	</select>
	
	<select id="projectList" parameterType="map" resultType="com.khacademy.khoffice.schedule.models.ScheduleDTO">
		select p.project_no as schedule_no, p.name as subject, start_date, end_date, pm.member_no as member_no from PROJECT p,PROJECT_MEMBER pm 
		where p.project_no = pm.project_no and member_no=#{member_no}
	</select>
	
	<select id="scheduleCount" parameterType="map" resultType="int">
	
		select count(*) from schedule where member_no = #{member_no}
	
	</select>
	
	<select id="projectCount" parameterType="map" resultType="int">
	
		select count(*) from PROJECT p,PROJECT_MEMBER pm where p.project_no = pm.project_no and member_no= #{member_no}
	
	</select>
	
	<select id="vacationList" parameterType="map" resultType="com.khacademy.khoffice.schedule.models.ScheduleDTO">
	
		select vacapproval_no as  schedule_no, type as subject, start_date, end_date, member_no
		from (select rank() over(partition by vacreport_no order by  vacapproval_no) 
		rank_no,  vacapproval_no, member_no, vacreport_no, start_date, end_date, reason, status,type
		from (select va.vacapproval_no as vacapproval_no , vr.member_no as member_no, vr.vacreport_no as vacreport_no , 
		vr.start_date as start_date,  vr.end_date as end_date, vr.reason as reason, va.status as status, vr.type as type
		from VACATION_APPROVAL va, VACATION_REPORT vr where va.vacreport_no=vr.vacreport_no)) where rank_no=3 and status=3 and member_no=#{member_no}
		
	</select>
	
	<select id="vacationCount" parameterType="map" resultType="int">
	
		select count(*)
		from (select rank() over(partition by vacreport_no order by  vacapproval_no) 
		rank_no,  vacapproval_no, member_no, vacreport_no, start_date, end_date, reason, status
		from (select va.vacapproval_no as vacapproval_no , vr.member_no as member_no, vr.vacreport_no as vacreport_no , 
		vr.start_date as start_date,  vr.end_date as end_date, vr.reason as reason, va.status as status
		from VACATION_APPROVAL va, VACATION_REPORT vr where va.vacreport_no=vr.vacreport_no)) where rank_no=3 and status=3 and member_no=#{member_no}
	</select>
	
	<delete id="scheduleDelete" parameterType="map">
	
		delete from schedule where schedule_no=#{schedule_no}
	
	</delete>
	
	
	
	
	
	
</mapper>